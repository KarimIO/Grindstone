#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (location = 0) in vec3 vertexPos;
layout (location = 1) in vec2 TexCoord;
layout (location = 2) in vec3 vertexNormal;
layout (location = 3) in vec3 vertexTangent;

layout(set = 0, binding = 0) uniform UniformBufferObject {
    mat4 model;
    mat4 mvp;
} ubo;

out gl_PerVertex {
    vec4 gl_Position;
};

layout(location = 0) out vec3 Position;
layout(location = 1) out vec2 TexCoord0;
layout(location = 2) out vec3 Normal;
layout(location = 3) out vec3 Tangent;

void main() {
    mat4 mvp = {{-1.25597, 1.004, -0.600011, -0.58813},
{1.30423, 0.966846, -0.577807, -0.566366},
{0, -1.9712, -0.589014, -0.57735},
{0, 0, 3.33206, 3.4641}};
    gl_Position = mvp * vec4(vertexPos, 1.0);
    TexCoord0   = vec2(TexCoord.x, -TexCoord.y);
    Position    = (ubo.model * vec4(vertexPos, 1.0)).xyz;
    Normal      = normalize((ubo.model * vec4(vertexNormal ,0.0)).xyz);
    Tangent     = normalize((ubo.model * vec4(vertexTangent,0.0)).xyz);
}