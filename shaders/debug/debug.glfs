#version 140

out vec4 colorOut;

uniform sampler2D gbuffer0;
uniform sampler2D gbuffer1;
uniform sampler2D gbuffer2;
uniform sampler2D gbuffer3;
uniform sampler2D texRefl;
uniform int debugMode;

in vec2 UV;

#include ../shaders/decode.is

void main() {
    if (debugMode == 1) {
        if (UV.x < 0.5 && UV.y < 0.5)
            colorOut = texture(gbuffer3, UV*2).aaaa;
        else if (UV.x < 0.5 && UV.y >= 0.5)
            colorOut = texture(gbuffer1, UV*2);
        else if (UV.x >= 0.5 && UV.y < 0.5)
            colorOut = texture(gbuffer2, UV*2);
        else
            colorOut = texture(gbuffer3, UV*2);
    }
    else if (debugMode == 2) {
        colorOut = vec4(texture(gbuffer0, UV).r, 0, 0, 1);
    }
    else if (debugMode == 3) {
        colorOut = vec4(WorldPosFromDepth(texture(gbuffer0, UV).r, UV), 1);
    }
    else if (debugMode == 4) {
        colorOut = vec4(texture(gbuffer1, UV).rg, 0, 1);
    }
    else if (debugMode == 5) {
        vec2 n = texture(gbuffer1, UV).rg;
        colorOut = vec4(decodeNormal(n), 1);
    }
    else if (debugMode == 6) {
        colorOut = textureLod(gbuffer2, UV, UV.x);
    }
    else if (debugMode == 7) {
        colorOut = texture(gbuffer3, UV);
    }
    else if (debugMode == 8) {
        colorOut = texture(gbuffer3, UV).aaaa;
    }
    else if (debugMode == 9) {
        colorOut = texture(texRefl, UV).rgba;
    }
}