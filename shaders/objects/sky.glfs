#version 140

in vec3 TexCoord0;

uniform float time;

out vec4 FragColor;

vec3 rand(vec2 co)
{
    float v = 150192;
    float a = (v+1)/10*12.9898;
    float b = (v+1)/10*78.233;
    float c = (v+1)/10*43758.5453;
    float dt= dot(co.xy ,vec2(a,b));
    float sn= mod(dt,3.14);
    return vec3(fract(sin(sn) * c));
}


void main() {
    float DayClock = time/20;

    float HorizonSharpness = 16;
    vec3 NightBaseColor = vec3(0.1, 0.0, 0.2);
    vec3 NightAltColor = vec3(0.128, 0.00523, 0.29);
    vec3 DayBaseColor = vec3(0.2, 0.5, 0.8);
    vec3 DayAltColor = vec3(0.222, 0.572, 0.823);
    vec3 sunPos = vec3(0,-sin(DayClock),-cos(DayClock));
    vec3 SunLightColor = vec3(1,0.4,0);
    float lightEcc = 10;

    float DayClockSkyMix = sin(DayClock) * 0.5 + 0.5;

    vec3 Direction = -normalize(TexCoord0);
    float OneMinusAbsY = 1-abs(Direction.y);
    float Horizon = pow(OneMinusAbsY, HorizonSharpness);
    float NL = dot(sunPos, Direction);
    float SunMask = clamp(2 * pow(clamp(NL, 0, 1), 256), 0, 1);
    float AbsNL = (NL + 1) * 0.5;
    float HorizonIntensity = Horizon * (pow(AbsNL, 1) + AbsNL);
    vec3 HorizonColor = pow(SunLightColor, vec3(lightEcc * (1 - Horizon)));
    vec3 SunColor = pow(SunLightColor, vec3(lightEcc * (1 - SunMask)));

    vec3 StarRand = rand(Direction.xy);
    float Stars = StarRand.r*0.33 + StarRand.g*0.33 + StarRand.b*0.33;
    Stars = pow(Stars, 4);

    vec3 NightFinalColor = pow(mix(NightBaseColor, NightAltColor, OneMinusAbsY), vec3(1-DayClock));
    NightFinalColor = NightFinalColor + Stars;
    vec3 DayFinalColor = pow(mix(DayBaseColor, DayAltColor, OneMinusAbsY), vec3(DayClock));
    vec3 SkyColor = mix(NightFinalColor.rgb, DayFinalColor.rgb, DayClock);
    vec3 SkyHorizon = mix(SkyColor, HorizonColor, HorizonIntensity);
    vec3 SkyHorizonSun = max(mix(SkyHorizon, SunColor, SunMask), 0);
    FragColor = vec4(vec3(SkyHorizonSun), 1);
    //mix(vec4(0,0,0,1), vec4(0.57,0.39, 0.65,1), Direction.y/4+0.125);
}   