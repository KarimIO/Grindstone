#version 330 core

out vec3 color; // X Y Z MaterialType

uniform sampler2D texPos;
uniform sampler2D texNormal;
uniform sampler2D texAlbedo;

in vec2 UV;

void main() {
  vec3 Position = texture(texPos, UV).rgb;
  vec3 Normal = texture(texNormal, UV).rgb;
  vec3 Albedo = texture(texAlbedo, UV).rgb;

  vec3 LightPos = vec3(0,1.5,0);
  vec3 LightDir = LightPos-Position;
  float Distance = length(LightDir);
  LightDir = normalize(LightDir);
  vec4 lightColor = vec4(1,0.99,0.9, 3);
  float lum = lightColor.w * max(dot(Normal,LightDir), 0) / (Distance * Distance + 1);
  color = lightColor.rgb * lum * Albedo;
}